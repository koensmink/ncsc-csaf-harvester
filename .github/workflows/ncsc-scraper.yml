name: NCSC Advisories Frequent

on:
  schedule:
    - cron: "*/30 * * * *"   # elke 10 minuten (UTC)
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: ncsc-scraper
  cancel-in-progress: true

jobs:
  scrape:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: pip install feedparser

      - name: Run scraper
        run: python scraper.py

      - name: Commit & push changes
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add output/
          git commit -m "NCSC advisories update [skip ci]" || echo "No changes to commit"
          git push || true

      # Lezen van output/last_run.json en outputs zetten
      - name: Read last_run.json
        id: last
        run: |
          if [ ! -f output/last_run.json ]; then
            echo "new_count=0" >> $GITHUB_OUTPUT
            echo "csv_path=" >> $GITHUB_OUTPUT
            exit 0
          fi
          NEW_COUNT=$(jq '.new_count' output/last_run.json)
          CSV_PATH=$(jq -r '.csv_path' output/last_run.json)
          echo "new_count=$NEW_COUNT" >> $GITHUB_OUTPUT
          echo "csv_path=$CSV_PATH" >> $GITHUB_OUTPUT

      - name: Send Telegram message
        if: steps.last.outputs.new_count != '0'
        env:
          BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        run: |
          MSG="NCSC update: ${{ steps.last.outputs.new_count }} nieuwe adviezen.\nCSV: ${{ steps.last.outputs.csv_path }}"
          curl -s -X POST "https://api.telegram.org/bot${BOT_TOKEN}/sendMessage" \
            -d chat_id="${CHAT_ID}" \
            -d text="$MSG"

      - name: Send Telegram CSV
        if: steps.last.outputs.new_count != '0'
        env:
          BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        run: |
          FILE="${{ steps.last.outputs.csv_path }}"
          if [ -f "$FILE" ]; then
            curl -s -X POST "https://api.telegram.org/bot${BOT_TOKEN}/sendDocument" \
              -F chat_id="${CHAT_ID}" \
              -F document=@"${FILE}" \
              -F caption="NCSC CSV: ${FILE}"
          else
            echo "CSV file not found at $FILE"
          fi
