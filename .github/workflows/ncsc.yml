name: NCSC CSAF Harvester

on:
  schedule:
    # Doordeweeks (ma-vr) elk uur om xx:00 UTC
    - cron: "0 * * * 1-5"
    # Weekend-runs die samen 23:55 NL-tijd afdekken (CET/CEST)
    - cron: "55 21 * * 6,0"  # dekkend voor CEST (UTC+2)
    - cron: "55 22 * * 6,0"  # dekkend voor CET (UTC+1)
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: ncsc-csaf-harvester
  cancel-in-progress: false

jobs:
  harvest:
    runs-on: self-hosted

    steps:
      # Gate: in het weekend alleen doorlopen als het lokaal 23:55 is
      - name: Weekend 23:55 Europe/Amsterdam gate
        run: |
          DOW=$(TZ=Europe/Amsterdam date +%u) # 1=ma ... 7=zo
          HM=$(TZ=Europe/Amsterdam date +%H:%M)
          if [ "$DOW" -ge 6 ]; then
            if [ "$HM" != "23:55" ]; then
              echo "Weekend en lokale tijd is $HM, niet 23:55 â€” job wordt overgeslagen."
              exit 0
            fi
          fi

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          set -e
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            pip install feedparser jq
          fi

      - name: Run scraper
        run: python scraper.py

      # Meld alleen bij [H/H], [M/H], [H/M] en dedupe op AdvisoryID Ã©n Title
      - name: Notify Telegram (high-risk combos, dedup by ID and Title)
        if: ${{ env.TELEGRAM_BOT_TOKEN != '' && env.TELEGRAM_CHAT_ID != '' }}
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        run: |
          set -euo pipefail

          # Probeer pad uit last_run.json te lezen (optioneel)
          CSV_PATH=$(jq -r '.csv_path // ""' output/last_run.json 2>/dev/null || echo "")
          # Fallback naar laatste CSV indien pad ontbreekt
          if [ -z "$CSV_PATH" ] || [ ! -f "$CSV_PATH" ]; then
            CSV_PATH=$(ls -t output/daily/*.csv 2>/dev/null | head -n1 || echo "")
          fi
          if [ -z "$CSV_PATH" ] || [ ! -f "$CSV_PATH" ]; then
            echo "Geen CSV gevonden â€” geen Telegram-bericht."
            exit 0
          fi

          python - "$CSV_PATH" > /tmp/telegram_message.txt <<'PY'
import csv
import sys
import datetime

csv_path = sys.argv[1]
HIGH = {"H/H","M/H","H/M"}

def pick(d,*keys, default=""):
    for k in keys:
        v = d.get(k)
        if v:
            return str(v).strip()
    return default

rows=[]
seen_ids=set()
seen_titles=set()

with open(csv_path, newline='', encoding="utf-8") as f:
    reader = csv.DictReader(f)
    if not reader.fieldnames:
        sys.exit(0)
    for r in reader:
        combo = pick(r, "SeverityCombo","severity_combo","Combo","combo")
        if combo not in HIGH:
            continue

        aid   = pick(r, "AdvisoryID","advisory_id","ID","id","csaf_id")
        title = pick(r, "Title","title","AdvisoryTitle","advisory_title","name","Name")
        tkey  = title.lower().strip() if title else ""

        # Dedup: ID of titel
        if aid and aid in seen_ids:
            continue
        if tkey and tkey in seen_titles:
            continue

        if aid:
            seen_ids.add(aid)
        if tkey:
            seen_titles.add(tkey)

        rows.append(r)

if not rows:
    sys.exit(0)

ts = datetime.datetime.utcnow().strftime("%Y-%m-%d %H:%M UTC")

# Tellen per combo
counts = {"H/H":0,"M/H":0,"H/M":0}
for r in rows:
    combo = pick(r, "SeverityCombo","severity_combo","Combo","combo")
    if combo in counts:
        counts[combo] += 1

lines = [f"ðŸš¨ðŸ™‚ URGENT | Hoog-risico combinaties gedetecteerd ({ts})"]
for k in ("H/H","M/H","H/M"):
    if counts[k]:
        lines.append(f"[{k}]: {counts[k]}")
lines.append("")
lines.append("Details:")

# Detailsregels (max 15)
shown = 0
for r in rows:
    if shown >= 15:
        break
    combo = pick(r, "SeverityCombo","severity_combo","Combo","combo", default="?/?")
    title = pick(r, "Title","title","AdvisoryTitle","advisory_title","name","Name", default="Advisory")
    aid   = pick(r, "AdvisoryID","advisory_id","ID","id","csaf_id")
    url   = pick(r, "URL","url","AdvisoryURL","advisory_url","link","Link","reference","csaf_url")
    bullet = f"â€¢ [{combo}] â€” {title}"
    if aid:
        bullet += f" ({aid})"
    lines.append(bullet)
    if url:
        lines.append(f"  {url}")
    shown += 1

if len(rows) > shown:
    lines.append(f"â€¦ en {len(rows)-shown} meer.")

print("\n".join(lines))
PY

          if [ ! -s /tmp/telegram_mess_]()
