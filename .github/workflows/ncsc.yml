name: NCSC CSAF Harvester

on:
  schedule:
    - cron: "*/30 * * * *" # elke 30 min (UTC)
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: ncsc-csaf-harvester
  cancel-in-progress: false

jobs:
  harvest:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0          # nodig voor rebase
          persist-credentials: true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            pip install feedparser
          fi

      - name: Run scraper
        run: python scraper.py

      # Optioneel: Telegram notificatie bij nieuwe advisories
      - name: (Optional) Notify Telegram if new advisories
        if: ${{ env.TELEGRAM_BOT_TOKEN != '' && env.TELEGRAM_CHAT_ID != '' }}
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        run: |
          # jq staat doorgaans al op ubuntu-latest
          NEW_COUNT=$(jq -r '.new_count' output/last_run.json 2>/dev/null || echo "")
          if [ -n "$NEW_COUNT" ] && [ "$NEW_COUNT" != "0" ]; then
            MSG="NCSC harvester: ${NEW_COUNT} nieuwe advisories."
            curl -s -X POST "https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage" \
              -d chat_id="${TELEGRAM_CHAT_ID}" \
              -d text="$MSG" || true
          fi

      - name: Commit & push outputs
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # Stage alles wat veranderd is door de run
          git add -A

          # Commit alleen als er staged changes zijn
          if git diff --staged --quiet; then
            echo "No changes to commit."
            exit 0
          fi

          git commit -m "NCSC advisories update [skip ci]"

          # Upstream binnenhalen en commit erbovenop zetten
          git pull --rebase --autostash

          # Push naar main
          git push
